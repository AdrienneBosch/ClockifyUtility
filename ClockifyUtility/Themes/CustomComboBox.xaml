<!-- This file is now obsolete and can be deleted. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ClockifyUtility.Controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <local:SubtractValueConverter x:Key="SubtractValueConverter" />

    <Style x:Key="CustomComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="8,2,8,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonHoverHighlightBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonHoverHighlightBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF888888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:CustomComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryVariantBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,0,2,0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboBoxItemStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomComboBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="ContentClickCatcher"
                                        Grid.Column="0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Focusable="False"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Cursor="Hand">
                                    <ContentPresenter x:Name="ContentSite"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      Content="{TemplateBinding SelectionBoxItem}"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Margin="4,0,0,0"/>
                                </Button>
                                <Border x:Name="ArrowSizer" Grid.Column="1" Width="32" Height="0" Visibility="Collapsed" />
                                <ToggleButton x:Name="ToggleButton"
                                              Grid.Column="1"
                                              Focusable="False"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch">
                                    <Grid>
                                        <Path x:Name="Arrow"
                                              Data="M 0 0 L 6 8 L 12 0 Z"
                                              Fill="White"
                                              Width="12" Height="8"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                    </Grid>
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource SurfaceBrush}"
                                    BorderBrush="{DynamicResource PrimaryVariantBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{TemplateBinding CornerRadius}">
                                <ScrollViewer Margin="0"
                                              SnapsToDevicePixels="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ContentClickCatcher" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonHoverHighlightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ButtonHoverHighlightBrush}"/>
                        </Trigger>
                        <!-- Custom Focused Border -->
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CustomComboBoxFocusBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
